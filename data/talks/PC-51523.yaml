# Talk details are specified in YAML files
# YAML was selected because we can use multi-line strings and add
# comments in the file.

speaker_name: "TODO"

talk_title: "Sachin Agarwal"

# At least 1 tag is necessary!!
talk_tags:
- "devops"
- "cloud"
- "automation"


talk_abstract: |
  Terraform is the go-to multi-cloud orchestration tool and Salt is a well known Python-based configuration management system. Pair them together and you have an end-to-end cloud infrastructure management system. Learn how to leverage the power of the duo to master cloud devops automation.

talk_details: |
  HashiCorp Terraform enables you to safely and predictably create, change, and improve infrastructure. It is an open source tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned. Salt (sometimes referred to as the SaltStack Platform) is a Python-based open-source configuration management software and remote execution engine. Supporting the “Infrastructure as Code” approach to deployment and cloud management.

  Terraform can be used to control infrastructure deployments and lifecycles in multiple clouds (orchestration) whereas salt is used to configure and manage servers and other devices.

  In this tutorial we will cover the ABCs of Terraform and Salt: we will learn how to deploy different types of virtual machines on different platforms using Terraform and configure them with Salt. We will learn how the two can be linked and used to deploy a complete Django stack; the example will highlight the one of the biggest advantages of the approach - freedom from cloud vendor lock-in - so you can be confident your stack is easily movable from one infrastructure provider to another.

  The tutorial will be partly based on the terrasalt open source project, link: https://github.com/bigbitbus/terrasalt
